package wewe.fuding.fudingandroid;

import java.util.ArrayList;

import android.app.ActionBar.LayoutParams;
import android.app.Dialog;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;

public class Fragment_AddPost extends Fragment {
	public static final String TAG = Fragment_AddPost.class.getSimpleName(); 
	public static FragmentActivity activity; // 자신을 포함하는 activity. onCreateView때 설정되고 onDestroyView때 null이 된다.
	
	private static Fragment_AddPost instance = null;

	public static Fragment_AddPost getInstance() {
		if (instance == null) { // 최초 1회 초기화
			instance = new Fragment_AddPost();
		}
		return instance;
	}

	public Fragment_AddPost() {
		 
	}
	ImageButton btnAdd;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		activity = getActivity();

		View v;
		v = inflater.inflate(R.layout.fragment_addposting, container, false);
		
		// 추가할 레이아
		final LinearLayout linearLayoutForm = (LinearLayout) v.findViewById(R.id.linearLayoutForm);

		
		
		// 항목 추가 버튼
		btnAdd = (ImageButton) v.findViewById(R.id.btnAdd);
		btnAdd.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				final LinearLayout newView = (LinearLayout) activity.getLayoutInflater().inflate(R.layout.row_add_item, null);
				newView.setLayoutParams(new LayoutParams(
						ViewGroup.LayoutParams.WRAP_CONTENT,
						ViewGroup.LayoutParams.WRAP_CONTENT));
			
				// 항목 삭제 버튼 
				ImageButton btnRemove = (ImageButton) newView.findViewById(R.id.btnRemove);
				btnRemove.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						linearLayoutForm.removeView(newView);
					}
				});
				
				// 항목 단계별 사진 
				ImageView btnImage = (ImageView) newView.findViewById(R.id.btnImage);
				btnImage.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						//앨범으로 이동 
						makepicture();
					}
				});
				linearLayoutForm.addView(newView);
				
			}
		});
		
		
		init(v);
		return v;

	}

	@Override
	public void onStart() {
		super.onStart();
	}
	
	@Override
	public void onResume() {
		super.onResume();
	}

	@Override
	public void onPause() {
		super.onPause();
	}

	@Override
	public void onDestroyView() {
		super.onDestroyView();
	}

	private void init(View v) {

	}
	
	private void makepicture() {

		final LinearLayout change_picture = (LinearLayout) View.inflate(this, R.layout.listview_settings_profile_photo, null);

		final ArrayList<String> arrList = new ArrayList<String>();
		arrList.add(getString(R.string.settings_profile_album));
		arrList.add(getString(R.string.settings_profile_camera));
		arrList.add(getString(R.string.settings_profile_delete));

		ArrayAdapter<String> adapter = new ArrayAdapter<String>(activity, R.layout.android_simple_list_item, arrList);
		ListView choice_piture = (ListView) change_picture.findViewById(R.id.listview_profile_picture);
		choice_piture.setAdapter(adapter);

		final Dialog pictureDialog = new Dialog(activity);
		pictureDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		pictureDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		pictureDialog.setContentView(change_picture);
		pictureDialog.show();

		choice_piture.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> adapterView, View v, int position, long id) {

				if (arrList.get(position) == getString(R.string.settings_profile_album)) {
					doTakeAlbumAction();
					pictureDialog.dismiss();

				} else if (arrList.get(position) == getString(R.string.settings_profile_camera)) {
					doTakePhotoAction();
					pictureDialog.dismiss();

				} else if (arrList.get(position) == getString(R.string.settings_profile_delete)) {
					pictureDialog.dismiss();
					imageDelete();
				}
			}

			private void doTakeAlbumAction() {

				Intent intent = new Intent(Intent.ACTION_PICK);
				intent.setType(android.provider.MediaStore.Images.Media.CONTENT_TYPE);
				startActivityForResult(intent, PICK_FROM_ALBUM);
			}

			private void doTakePhotoAction() {

				Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);

				// Crop된 이미지를 저장할 파일의 경로를 생성
				mImageCaptureUri = createSaveCropFile();

				intent.putExtra(android.provider.MediaStore.EXTRA_OUTPUT, mImageCaptureUri);

				startActivityForResult(intent, PICK_FROM_CAMERA);
			}
		});

	}

	protected void imageDelete() {
		
	}
	
}
